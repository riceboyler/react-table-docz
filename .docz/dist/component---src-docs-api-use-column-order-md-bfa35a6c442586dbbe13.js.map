{"version":3,"sources":["webpack:///../src/docs/api/useColumnOrder.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBACL,0BAAYC,WAAW,MAAvB,mBACH,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,aAEF,qBAAG,0BAAYA,WAAW,KAAvB,kBAAH,qCAAmG,sBAAQA,WAAW,KAAnB,2BAAnG,sHACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,kGAAiF,0BAAYA,WAAW,KAAvB,sBACjF,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,6CAAsF,kBAAIA,WAAW,MACrH,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,OACpC,kBAAIA,WAAW,MAAf,2HAAgJ,0BAAYA,WAAW,MAAvB,UAAhJ,iBAGN,iBAAQ,CACN,GAAM,uBADR,uBAGA,uEAAsD,0BAAYA,WAAW,KAAvB,YAAtD,KACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,0EACnB,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,iEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,qCAA8G,0BAAYA,WAAW,MAAvB,YAA9G,wFAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,mBAAGA,WAAW,KAAQ,CACrC,KAAQ,sFADO,YAIrB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,mBAAGA,WAAW,KAAQ,CACrC,KAAQ,mGADO,2B,uMAS3BJ,EAAWK,gBAAiB","file":"component---src-docs-api-use-column-order-md-bfa35a6c442586dbbe13.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jasonclark/Source/react-table-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usecolumnorder\"\n    }}><inlineCode parentName=\"h1\">{`useColumnOrder`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\">{`Plugin Hook`}</li>\n      <li parentName=\"ul\">{`Optional`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`useColumnOrder`}</inlineCode>{` is a plugin hook that implements `}<strong parentName=\"p\">{`basic column reordering`}</strong>{`. As columns are reordered, their header groups are reverse-engineered so as to never have orphaned header groups.`}</p>\n    <h3 {...{\n      \"id\": \"table-options\"\n    }}>{`Table Options`}</h3>\n    <p>{`The following options are supported via the main options object passed to `}<inlineCode parentName=\"p\">{`useTable(options)`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`initialState.columnOrder: Array<ColumnId>`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Optional`}</li>\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`[]`}</inlineCode></li>\n          <li parentName=\"ul\">{`Any column ID's not represented in this array will be naturally ordered based on their position in the original table's `}<inlineCode parentName=\"li\">{`column`}</inlineCode>{` structure`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"instance-properties\"\n    }}>{`Instance Properties`}</h3>\n    <p>{`The following values are provided to the table `}<inlineCode parentName=\"p\">{`instance`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`setColumnOrder: Function(updater: Function | Array<ColumnId>) => void`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Use this function to programmatically update the columnOrder.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`updater`}</inlineCode>{` can be a function or value. If a `}<inlineCode parentName=\"li\">{`function`}</inlineCode>{` is passed, it will receive the current value and expect a new one to be returned.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/tannerlinsley/react-table/tree/master/examples/column-ordering\"\n          }}>{`Source`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/column-ordering\"\n          }}>{`Open in CodeSandbox`}</a></p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}