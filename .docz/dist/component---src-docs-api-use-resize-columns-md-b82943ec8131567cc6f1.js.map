{"version":3,"sources":["webpack:///../src/docs/api/useResizeColumns.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBACL,0BAAYC,WAAW,MAAvB,qBACH,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,aAEF,qBAAG,0BAAYA,WAAW,KAAvB,oBAAH,uHAAuL,0BAAYA,WAAW,KAAvB,kBAAvL,QAA0P,0BAAYA,WAAW,KAAvB,qBAA1P,oDACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,yBAAkE,kBAAIA,WAAW,MACjG,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,UACpC,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,QAApC,qDAGN,iBAAQ,CACN,GAAM,kBADR,kBAGA,gDAA+B,0BAAYA,WAAW,KAAvB,SAA/B,KAAsF,0BAAYA,WAAW,KAAvB,YAAtF,QAAmJ,0BAAYA,WAAW,KAAvB,YAAnJ,kEAA0Q,mBAAGA,WAAW,KAAQ,CAC5R,KAAQ,oBAD8P,sBAA1Q,2CAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,yBAAkE,kBAAIA,WAAW,MACjG,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,UACpC,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,QAApC,6CAGN,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mBAA4D,kBAAIA,WAAW,MAC3F,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,mBACpB,kBAAIA,WAAW,MAAf,gFAEJ,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mBAA4D,kBAAIA,WAAW,MAC3F,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,QAAhC,oCAEJ,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oBAA6D,kBAAIA,WAAW,MAC5F,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,QAAhC,iDAGN,iBAAQ,CACN,GAAM,WADR,WAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sFADQ,WAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mGADQ,0B,yMAQ1BJ,EAAWK,gBAAiB","file":"component---src-docs-api-use-resize-columns-md-b82943ec8131567cc6f1.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jasonclark/Source/react-table-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useresizecolumns\"\n    }}><inlineCode parentName=\"h1\">{`useResizeColumns`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\">{`Plugin Hook`}</li>\n      <li parentName=\"ul\">{`Optional`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`useResizeColumns`}</inlineCode>{` is a plugin hook that adds support for resizing headers and cells when using non-table elements for layout eg. the `}<inlineCode parentName=\"p\">{`useBlockLayout`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`useAbsoluteLayout`}</inlineCode>{` hooks. It even supports resizing column groups!`}</p>\n    <h3 {...{\n      \"id\": \"table-options\"\n    }}>{`Table Options`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`disableResizing: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n          <li parentName=\"ul\">{`When set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, resizing is disabled across the entire table`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"column-options\"\n    }}>{`Column Options`}</h3>\n    <p>{`The core column options `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`minWidth`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`maxWidth`}</inlineCode>{` are used to calculate column and cell widths and must be set. `}<a parentName=\"p\" {...{\n        \"href\": \"#column-options\"\n      }}>{`See Column Options`}</a>{` for more information on these options.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`disableResizing: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n          <li parentName=\"ul\">{`When set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, resizing is disabled for this column`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"header-properties\"\n    }}>{`Header Properties`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getResizerProps`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Usage Required`}</strong></li>\n          <li parentName=\"ul\">{`This core prop getter is required to to enable absolute layout for headers`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`canResize: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Will be `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` if this column can be resized`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`isResizing: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Will be `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` if this column is currently being resized`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/tannerlinsley/react-table/tree/master/examples/column-resizing\"\n        }}>{`Source`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/column-resizing\"\n        }}>{`Open in CodeSandbox`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}