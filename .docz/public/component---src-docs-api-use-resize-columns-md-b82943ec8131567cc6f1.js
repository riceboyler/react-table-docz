(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"5eqh":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return s}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var i=n("/FXl"),a=n("TjRS");n("aD51");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/api/useResizeColumns.md"}});var r={_frontmatter:b},o=a.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(i.b)(o,l({},r,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"useresizecolumns"},Object(i.b)("inlineCode",{parentName:"h1"},"useResizeColumns")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Plugin Hook"),Object(i.b)("li",{parentName:"ul"},"Optional")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"useResizeColumns")," is a plugin hook that adds support for resizing headers and cells when using non-table elements for layout eg. the ",Object(i.b)("inlineCode",{parentName:"p"},"useBlockLayout")," and ",Object(i.b)("inlineCode",{parentName:"p"},"useAbsoluteLayout")," hooks. It even supports resizing column groups!"),Object(i.b)("h3",{id:"table-options"},"Table Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableResizing: Bool"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"false")),Object(i.b)("li",{parentName:"ul"},"When set to ",Object(i.b)("inlineCode",{parentName:"li"},"true"),", resizing is disabled across the entire table")))),Object(i.b)("h3",{id:"column-options"},"Column Options"),Object(i.b)("p",null,"The core column options ",Object(i.b)("inlineCode",{parentName:"p"},"width"),", ",Object(i.b)("inlineCode",{parentName:"p"},"minWidth")," and ",Object(i.b)("inlineCode",{parentName:"p"},"maxWidth")," are used to calculate column and cell widths and must be set. ",Object(i.b)("a",l({parentName:"p"},{href:"#column-options"}),"See Column Options")," for more information on these options."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableResizing: Bool"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"false")),Object(i.b)("li",{parentName:"ul"},"When set to ",Object(i.b)("inlineCode",{parentName:"li"},"true"),", resizing is disabled for this column")))),Object(i.b)("h3",{id:"header-properties"},"Header Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"getResizerProps"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Usage Required")),Object(i.b)("li",{parentName:"ul"},"This core prop getter is required to to enable absolute layout for headers"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"canResize: Bool"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Will be ",Object(i.b)("inlineCode",{parentName:"li"},"true")," if this column can be resized"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"isResizing: Bool"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Will be ",Object(i.b)("inlineCode",{parentName:"li"},"true")," if this column is currently being resized")))),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",l({parentName:"li"},{href:"https://github.com/tannerlinsley/react-table/tree/master/examples/column-resizing"}),"Source")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",l({parentName:"li"},{href:"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/column-resizing"}),"Open in CodeSandbox"))))}s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/api/useResizeColumns.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-api-use-resize-columns-md-b82943ec8131567cc6f1.js.map