{"version":3,"sources":["webpack:///../src/docs/api/usePagination.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-docs-api-use-pagination-md-33a7fec26842fad8cd84.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jasonclark/Source/react-table-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usepagination\"\n    }}><inlineCode parentName=\"h1\">{`usePagination`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\">{`Plugin Hook`}</li>\n      <li parentName=\"ul\">{`Optional`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`usePagination`}</inlineCode>{` is the hook that implements `}<strong parentName=\"p\">{`row pagination`}</strong>{`. It can be used for both client-side pagination or server-side pagination. For more information on pagination, see Pagination`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{` Some server-side pagination implementations do not use page index and instead use `}<strong parentName=\"p\">{`token based pagination`}</strong>{`! If that's the case, please use the `}<inlineCode parentName=\"p\">{`useTokenPagination`}</inlineCode>{` plugin instead.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"table-options\"\n    }}>{`Table Options`}</h3>\n    <p>{`The following options are supported via the main options object passed to `}<inlineCode parentName=\"p\">{`useTable(options)`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`initialState.pageSize: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Required`}</strong></li>\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`10`}</inlineCode></li>\n          <li parentName=\"ul\">{`Determines the amount of rows on any given page`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`initialState.pageIndex: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Required`}</strong></li>\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`0`}</inlineCode></li>\n          <li parentName=\"ul\">{`The index of the page that should be displayed via the `}<inlineCode parentName=\"li\">{`page`}</inlineCode>{` instance value`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pageCount: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Required if `}<inlineCode parentName=\"strong\">{`manualPagination`}</inlineCode>{` is set to `}<inlineCode parentName=\"strong\">{`true`}</inlineCode></strong></li>\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`manualPagination`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, then this value used to determine the amount of pages available. This amount is then used to materialize the `}<inlineCode parentName=\"li\">{`pageOptions`}</inlineCode>{` and also compute the `}<inlineCode parentName=\"li\">{`canNextPage`}</inlineCode>{` values on the table instance.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`manualPagination: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Enables pagination functionality, but does not automatically perform row pagination.`}</li>\n          <li parentName=\"ul\">{`Turn this on if you wish to implement your own pagination outside of the table (eg. server-side pagination or any other manual pagination technique)`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`autoResetPage: Boolean`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n          <li parentName=\"ul\">{`When `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, the `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` state will automatically reset if `}<inlineCode parentName=\"li\">{`manualPagination`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` and any of the following conditions are met:`}<ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is changed`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`manualSortBy`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`state.sortBy`}</inlineCode>{` is changed`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`manualGlobalFilter`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`state.globalFilter`}</inlineCode>{` is changed`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`manualFilters`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`state.filters`}</inlineCode>{` is changed`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`manualGroupBy`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`state.groupBy`}</inlineCode>{` is changed`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`To disable, set to `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n          <li parentName=\"ul\">{`For more information see the FAQ `}<a parentName=\"li\" {...{\n              \"href\": \"../faq.md#how-do-i-stop-my-table-state-from-automatically-resetting-when-my-data-changes\"\n            }}>{`\"How do I stop my table state from automatically resetting when my data changes?\"`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`paginateExpandedRows: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Optional`}</li>\n          <li parentName=\"ul\">{`Only applies when using the `}<inlineCode parentName=\"li\">{`useExpanded`}</inlineCode>{` plugin hook simultaneously`}</li>\n          <li parentName=\"ul\">{`Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n          <li parentName=\"ul\">{`If set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, expanded rows are paginated along with normal rows. This results in stable page sizes across every page.`}</li>\n          <li parentName=\"ul\">{`If set to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, expanded rows will be spliced in after pagination. This means that the total number of rows in a page can potentially be larger than the page size, depending on how many subrows are expanded.`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"instance-properties\"\n    }}>{`Instance Properties`}</h3>\n    <p>{`The following values are provided to the table `}<inlineCode parentName=\"p\">{`instance`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`state.pageIndex: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This is the current `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` value, located on the state.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`state.pageSize: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This is the current `}<inlineCode parentName=\"li\">{`pageSize`}</inlineCode>{` value, located on the state.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`page: Array<row>`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`An array of rows for the `}<strong parentName=\"li\">{`current`}</strong>{` page, determined by the current `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` value.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pageCount: Int`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`manualPagination`}</inlineCode>{` is set to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, this is the total amount of pages available in the table based on the current `}<inlineCode parentName=\"li\">{`pageSize`}</inlineCode>{` value`}</li>\n          <li parentName=\"ul\">{`if `}<inlineCode parentName=\"li\">{`manualPagination`}</inlineCode>{` is set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, this is merely the same `}<inlineCode parentName=\"li\">{`pageCount`}</inlineCode>{` option that was passed in the table options.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pageOptions: Array<Int>`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`An array of zero-based index integers corresponding to available pages in the table.`}</li>\n          <li parentName=\"ul\">{`This can be useful for generating things like select interfaces for the user to select a page from a list, instead of manually paginating to the desired page.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`canPreviousPage: Bool`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`If there are pages and the current `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` is greater than `}<inlineCode parentName=\"li\">{`0`}</inlineCode>{`, this will be `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`canNextPage:`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`If there are pages and the current `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` is less than `}<inlineCode parentName=\"li\">{`pageCount`}</inlineCode>{`, this will be `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gotoPage: Function(pageIndex)`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This function, when called with a valid `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{`, will set `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` to that value.`}</li>\n          <li parentName=\"ul\">{`If the aginateassed index is outside of the valid `}<inlineCode parentName=\"li\">{`pageIndex`}</inlineCode>{` range, then this function will do nothing.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`previousPage: Function`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This function decreases `}<inlineCode parentName=\"li\">{`state.pageIndex`}</inlineCode>{` by one.`}</li>\n          <li parentName=\"ul\">{`If there are no pages or `}<inlineCode parentName=\"li\">{`canPreviousPage`}</inlineCode>{` is false, this function will do nothing.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nextPage: Function`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This function increases `}<inlineCode parentName=\"li\">{`state.pageIndex`}</inlineCode>{` by one.`}</li>\n          <li parentName=\"ul\">{`If there are no pages or `}<inlineCode parentName=\"li\">{`canNextPage`}</inlineCode>{` is false, this function will do nothing.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`setPageSize: Function(pageSize)`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`This function sets `}<inlineCode parentName=\"li\">{`state.pageSize`}</inlineCode>{` to the new value.`}</li>\n          <li parentName=\"ul\">{`As a result of a pageSize change, a new `}<inlineCode parentName=\"li\">{`state.pageIndex`}</inlineCode>{` is also calculated. It is calculated via `}<inlineCode parentName=\"li\">{`Math.floor(currentTopRowIndex / newPageSize)`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Basic Pagination`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/tannerlinsley/react-table/tree/master/examples/pagination\"\n            }}>{`Source`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/pagination\"\n            }}>{`Open in CodeSandbox`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Controlled Pagination`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/tannerlinsley/react-table/tree/master/examples/pagination\"\n            }}>{`Source`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/pagination\"\n            }}>{`Open in CodeSandbox`}</a></li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}